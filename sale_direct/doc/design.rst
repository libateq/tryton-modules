******
Design
******

The *Sale Direct* module introduces some new concepts and extends some existing
concepts.

.. _model-sale.direct.visit.type:

Visit Type
==========

The *Visit Type* concept is used to define different types of sales
`Visit <model-sale.direct.visit>`.

It also provides default values for the
`Perform Visit <wizard-sale.direct.visit.perform>` wizard.
The default visit type is automatically selected as the visit type for visits
to `Addresses <model-party.address>` that have not been visited before, or are
not currently being revisited.

.. seealso::

   A list of the visit types can be found using the main menu item:

      :menuselection:`Sales --> Configuration --> Visit Types`

.. _model-sale.direct.visit:

Visit
=====

A *Visit* represents a single sales visit to an
`Address <model-party.address>`.
Each visit occurs at a particular time, and is of a particular
`Visit Type <model-sale.direct.visit.type>`.

Some other properties can also be stored about a visit, such as the date and
time when a revisit is required, any notes about the visit, and a link to any
`Sales <sale:model-sale.sale>` that were generated by the visit.

During a visit sales material may be left or collected, and the
`Stock Moves <stock:model-stock.move>` that leave or collect the sales
material are shown.

.. seealso::

   A list of the visit types can be found using the main menu item:

      :menuselection:`Sales --> Visits --> Visits`

Wizards
-------

.. _wizard-sale.direct.visit.perform:

Perform Visit
^^^^^^^^^^^^^

The *Perform Visit* wizard makes it easy for users to create new
`Visits <model-sale.direct.visit>` to new or existing
`Addresses <model-party.address>`.

Many of the properties for the visit are provided by, or calculated from, the
`Visit Type <model-sale.direct.visit.type>`.
So in most cases only the address and sometimes the visit type need to be
entered in.

.. seealso::

   This wizard can also be started from the main menu item:

      :menuselection:`Sales --> Visits --> New Visit`

.. _wizard-sale.direct.visit.register_order:

Register Order
^^^^^^^^^^^^^^

The *Register Order* wizard starts a new `Sales Order <sale:model-sale.sale>`
and links it to the visit.

If the visit was to an `Address <model-party.address>` that is not linked to
a specific `Party <party:model-party.party>` then a new party is created and
the address is moved to the new party.

.. _model-party.address:

Address
========

With the *Sale Direct Module* active addresses gain some additional properties.
Information about the last `Visit <model-sale.direct.visit>` to the address
is available, as is information about when any revisit is due.

This module also allows addresses to be created without an associated
`Party <model-party.address>`.
This is used for `Visits <model-sale.direct.visit>` to addresses where the
party is not known and does not need to be recorded.

.. seealso::

   The `Address <party:model-party.address>` concept is introduced by the
   :doc:`Party Module <party:index>`.
